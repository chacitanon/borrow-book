[{"C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\index.js":"1","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\App.js":"3","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\Register\\Register.js":"4","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\Login\\Login.js":"5","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\Home\\HomePage.js":"6","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\components\\Layout\\Layout.js":"7","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\components\\Footer\\Footer.js":"8","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\config\\axios.js":"9","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\services\\LocalStorageService.js":"10","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\config\\constants.js":"11","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\components\\Navbar\\Navbar.js":"12","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\BookFor\\BookForPastner.js":"13","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\BookFor\\AddBook.js":"14","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\BookFor\\EditBook.js":"15","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\AllBook\\AllBook.js":"16","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\SingleBook\\SingleBook.js":"17","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\Cart\\Cart.js":"18","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\Context\\bookContext.js":"19","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\Reducer\\BookReducer.js":"20","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\components\\CardCart\\CardCart.js":"21","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\components\\MiniCart\\MiniCart.js":"22","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\components\\MiniCart\\SelectedItem.js":"23","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\components\\MiniCart\\CtaButton.js":"24","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\components\\Omise\\Omise.js":"25","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\Login\\AdminLogin.js":"26","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\Register\\AdminRegister.js":"27","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\UserBorrow\\UserBorrow.js":"28"},{"size":474,"mtime":1607447664795,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"32"},{"size":1814,"mtime":1608016380063,"results":"33","hashOfConfig":"30"},{"size":5503,"mtime":1607524389904,"results":"34","hashOfConfig":"30"},{"size":2837,"mtime":1608295581683,"results":"35","hashOfConfig":"30"},{"size":1207,"mtime":1608102704580,"results":"36","hashOfConfig":"30"},{"size":931,"mtime":1608632851852,"results":"37","hashOfConfig":"30"},{"size":2287,"mtime":1608276109716,"results":"38","hashOfConfig":"30"},{"size":999,"mtime":1607488049193,"results":"39","hashOfConfig":"30"},{"size":503,"mtime":1607487951294,"results":"40","hashOfConfig":"30"},{"size":98,"mtime":1607513500686,"results":"41","hashOfConfig":"30"},{"size":6433,"mtime":1608625264027,"results":"42","hashOfConfig":"30"},{"size":4655,"mtime":1607674313769,"results":"43","hashOfConfig":"30"},{"size":9438,"mtime":1608284287646,"results":"44","hashOfConfig":"30"},{"size":10056,"mtime":1608284280608,"results":"45","hashOfConfig":"30"},{"size":9177,"mtime":1608295676178,"results":"46","hashOfConfig":"30"},{"size":6325,"mtime":1608279405511,"results":"47","hashOfConfig":"30"},{"size":3226,"mtime":1608539712897,"results":"48","hashOfConfig":"30"},{"size":1656,"mtime":1608279021031,"results":"49","hashOfConfig":"30"},{"size":983,"mtime":1607781391243,"results":"50","hashOfConfig":"30"},{"size":1410,"mtime":1608295707189,"results":"51","hashOfConfig":"30"},{"size":1815,"mtime":1607874059936,"results":"52","hashOfConfig":"30"},{"size":639,"mtime":1607873343457,"results":"53","hashOfConfig":"30"},{"size":339,"mtime":1607873429579,"results":"54","hashOfConfig":"30"},{"size":987,"mtime":1608539311716,"results":"55","hashOfConfig":"30"},{"size":2875,"mtime":1608295594163,"results":"56","hashOfConfig":"30"},{"size":5532,"mtime":1608015720077,"results":"57","hashOfConfig":"30"},{"size":4736,"mtime":1608295554466,"results":"58","hashOfConfig":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"7635zo",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"2e8unb",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"61"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"61"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"61"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"61"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"61"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"61"},"C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\index.js",[],["129","130"],"C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\reportWebVitals.js",[],["131","132"],"C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\App.js",[],"C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\Register\\Register.js",[],"C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\Login\\Login.js",[],"C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\Home\\HomePage.js",[],"C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\components\\Layout\\Layout.js",["133"],"C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\config\\axios.js",[],"C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\services\\LocalStorageService.js",["134"],"const setToken = (token) => {\r\n  localStorage.setItem(\"ACCESS_TOKEN\", token);\r\n};\r\n\r\nconst getToken = () => {\r\n  return localStorage.getItem(\"ACCESS_TOKEN\");\r\n};\r\n\r\nconst removeToken = () => {\r\n  localStorage.clear();\r\n};\r\n\r\nconst getRole = () => {\r\n  if (getToken()) {\r\n    return \"USER\";\r\n  }\r\n  return \"GUEST\";\r\n};\r\nconst setRole = () => {\r\n  if (getToken()) {\r\n    return \"USER\";\r\n  }\r\n  return \"GUEST\";\r\n};\r\n\r\nexport default {\r\n  setToken,\r\n  getToken,\r\n  removeToken,\r\n  setRole,\r\n  getRole,\r\n};\r\n","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\config\\constants.js",[],"C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\components\\Navbar\\Navbar.js",["135"],"C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\BookFor\\BookForPastner.js",["136"],"import React, { useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  InputNumber,\r\n  Form,\r\n  Row,\r\n  Col,\r\n} from \"antd\";\r\nimport axios from \"../../config/axios\";\r\nimport { CgAdd } from \"react-icons/cg\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n          children\r\n        )}\r\n    </td>\r\n  );\r\n};\r\n\r\nfunction BookForPastner(props) {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const [form] = Form.useForm();\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n\r\n\r\n\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [Books, setBooks] = React.useState([]);\r\n\r\n\r\n\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  const onRedirect = (path) => {\r\n    props.history.push(path);\r\n    setShow(!show);\r\n  };\r\n  const onSearch = async (value) => {\r\n    setIsLoading(true);\r\n    const { data } = await axios.get(`/books/?_search=${value}`);\r\n    const searchBook = data;\r\n    setBooks(searchBook);\r\n    setBooks(searchBook);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const fetchAllBooks = async () => {\r\n    const { data } = await axios.get(\"/books/\");\r\n    setBooks(data);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchAllBooks();\r\n  }, []);\r\n\r\n\r\n\r\n  const deleteBook = async (id) => {\r\n    await axios.delete(`/books/${id}`);\r\n    setBooks(Books.filter((book) => book.id !== id));\r\n    ///@@@@@@\r\n    // fetchAllBooks();\r\n    setEditingKey(\"\");\r\n  };\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Book\",\r\n      dataIndex: \"name\",\r\n      width: \"15%\",\r\n      align: \"center\",\r\n\r\n\r\n    },\r\n    {\r\n      title: \"Img\",\r\n      dataIndex: \"main_image\",\r\n      render: (text, record) => <img src={record.main_image} style={{ width: \"3rem\", height: \"3rem\", }} />,\r\n      width: \"10%\",\r\n      align: \"center\",\r\n\r\n    },\r\n\r\n    {\r\n      title: \"price\",\r\n      dataIndex: \"price\",\r\n      width: \"10%\",\r\n\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"author\",\r\n      dataIndex: \"author\",\r\n      width: \"10%\",\r\n\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"statusBook\",\r\n      dataIndex: \"statusBook\",\r\n      width: \"10%\",\r\n\r\n      align: \"center\",\r\n    },\r\n\r\n    {\r\n      title: \"operation\",\r\n      dataIndex: \"operation\",\r\n      align: \"center\",\r\n      width: \"15%\",\r\n      render: (_, record) => {\r\n\r\n        return (\r\n          <Row justify=\"space-around\">\r\n            <Col>\r\n              <button style={{ width: \"4rem\", }} onClick={() => onRedirect(`/admin/book/edit/${record.id}`)}>\r\n                Edit\r\n              </button>\r\n            </Col>\r\n            <Col>\r\n              <button style={{ width: \"4rem\" }}\r\n\r\n                onClick={() => deleteBook(record.id)}\r\n              >\r\n                Delete\r\n          </button>\r\n            </Col>\r\n\r\n          </Row >\r\n\r\n        );\r\n\r\n      },\r\n    },\r\n  ];\r\n\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === \"price\" ? \"number\" : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Row style={{ marginLeft: \"5rem\" }}>\r\n        <Col>\r\n          <Search\r\n            placeholder=\"input search text\"\r\n            allowClear\r\n            onSearch={onSearch}\r\n            loading={isLoading}\r\n            style={{ width: \"25rem\", margin: \"0 10px\" }}\r\n          />\r\n        </Col>\r\n        <CgAdd style={{ width: \"2rem\", height: \"2rem\" }} onClick={() => onRedirect(\"/admin/book/add\")}></CgAdd>\r\n      </Row>\r\n      <Form form={form} component={false}>\r\n        <Table\r\n          style={{ margin: \"3rem\", border: \"2px solid #ddd\" }}\r\n          components={{\r\n            body: {\r\n              cell: EditableCell,\r\n\r\n            },\r\n          }}\r\n\r\n          bordered\r\n          dataSource={Books}\r\n          columns={mergedColumns}\r\n          rowClassName=\"editable-row\"\r\n          rowKey={record => record.id}\r\n\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BookForPastner;\r\n","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\BookFor\\AddBook.js",["137","138"],"import { Col, Row, Form, Input, Button, Upload, Select, notification } from 'antd';\r\nimport React from 'react';\r\nimport { InsideMainSection } from '../../components/Layout/Layout';\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from '../../config/axios';\r\nconst { Option } = Select;\r\n\r\nfunction AddBook(props) {\r\n  const [books, setBooks] = React.useState({});\r\n\r\n\r\n  const mainList = [\r\n    // {\r\n    //   uid: \"-1\",\r\n    //   name: \"main_image\",\r\n    //   status: \"done\",\r\n    //   url:\r\n    //     setBooks.main_image,\r\n\r\n    // },\r\n\r\n  ];\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(values);\r\n    const formData = new FormData();\r\n    console.log(values.main_image.file.originFileObj);\r\n    formData.append('main_image', values.main_image.file.originFileObj);\r\n    formData.append('name', values.name);\r\n    formData.append('author', values.author);\r\n    formData.append('price', values.price);\r\n    formData.append('description', values.description);\r\n    formData.append('nameType', values.nameType);\r\n    formData.append('codeType', values.codeType);\r\n    formData.append('countInStock', values.countInStock);\r\n\r\n    try {\r\n      const res = await axios.post('/books', formData, { headers: { 'Content-Type': 'multipart/form-data' } });\r\n\r\n      if (res)\r\n        notification.success({\r\n          description: \"successfully\",\r\n        });\r\n      props.history.push('/admin/book');\r\n\r\n    } catch (error) {\r\n      notification.error({\r\n        description: \"wrong.\",\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  function onChange(value) {\r\n    console.log(`selected ${value}`);\r\n  }\r\n\r\n  function onBlur() {\r\n    console.log(\"blur\");\r\n  }\r\n\r\n  function onFocus() {\r\n    console.log(\"focus\");\r\n  }\r\n  function onSearch(val) {\r\n    console.log(\"search:\", val);\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <InsideMainSection>\r\n      <h2\r\n        style={{\r\n          background: \"linear-gradient(to right, #002416, #89e380)\",\r\n          width: \"100%\",\r\n          height: \"3.5rem\",\r\n          margin: \"0 auto\",\r\n          textAlign: \"center\",\r\n          paddingTop: \"0.5rem\",\r\n          paddingLeft: \"0rem\",\r\n          paddingRight: \"0rem\",\r\n          borderTopLeftRadius: \"1rem\",\r\n          borderTopRightRadius: \"1rem\",\r\n          color: \"white\",\r\n          fontFamily: \"Playfair\",\r\n          marginBottom: \"2rem\"\r\n        }}\r\n      >\r\n        Add Book\r\n        </h2>\r\n      <Row justify=\"center\">\r\n        <Col span={21}>\r\n          <Form\r\n            layout=\"horizontal\"\r\n            labelCol={{ span: 4 }}\r\n            wrapperCol={{ span: 18 }}\r\n            onFinish={onFinish}\r\n\r\n          >\r\n            <Row justify=\"center\">\r\n              <Col span={20}>\r\n                <Form.Item\r\n                  name=\"name\"\r\n                  label=\"Book Name\"\r\n                  rules={[\r\n                    {\r\n                      required: false,\r\n                      message: \"Please input your Book Name!\",\r\n                    },\r\n                  ]} >\r\n\r\n                  <Input\r\n                    placeholder=\"input Book Name\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row justify=\"center\">\r\n              <Col span={20}>\r\n                <Form.Item\r\n                  name=\"author\"\r\n                  label=\"Author\"\r\n                  rules={[\r\n                    {\r\n                      required: false,\r\n                      message: \"Please input your Author!\",\r\n                    },\r\n                  ]} >\r\n\r\n                  <Input\r\n                    placeholder=\"input Author\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row justify=\"center\">\r\n              <Col span={20}>\r\n                <Form.Item\r\n                  name=\"nameType\"\r\n                  label=\"Category_Name\"\r\n\r\n                  rules={[\r\n                    {\r\n                      required: false,\r\n                      message: \"Please input your category\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    name=\"nameType\"\r\n                    showSearch\r\n                    style={{ width: 200 }}\r\n                    placeholder=\"Select a note\"\r\n                    optionFilterProp=\"children\"\r\n                    onChange={onChange}\r\n                    onFocus={onFocus}\r\n                    onBlur={onBlur}\r\n                    onSearch={onSearch}\r\n                    filterOption={(input, option) =>\r\n                      option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                      0\r\n                    }\r\n                  >\r\n                    <Option value=\"anthology\">Floral</Option>\r\n                    <Option value=\"children's\">Citrus</Option>\r\n                    <Option value=\"crime\">Powdery</Option>\r\n                    <Option value=\"drama\">Fruity</Option>\r\n                    <Option value=\"fairytale\">Aromatic</Option>\r\n                    <Option value=\"horror\">Spicy</Option>\r\n                    <Option value=\"romance\">Woody</Option>\r\n\r\n                  </Select></Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row justify=\"center\">\r\n              <Col span={20}>\r\n                <Form.Item\r\n                  name=\"codeType\"\r\n                  label=\"Category_Code\"\r\n\r\n                  rules={[\r\n                    {\r\n                      required: false,\r\n                      message: \"Please input your category\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    name=\"codeType\"\r\n                    showSearch\r\n                    style={{ width: 200 }}\r\n                    placeholder=\"Select a note\"\r\n                    optionFilterProp=\"children\"\r\n                    onChange={onChange}\r\n                    onFocus={onFocus}\r\n                    onBlur={onBlur}\r\n                    onSearch={onSearch}\r\n                    filterOption={(input, option) =>\r\n                      option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                      0\r\n                    }\r\n                  >\r\n                    <Option value=\"A01\">Floral</Option>\r\n                    <Option value=\"Ch01's\">Citrus</Option>\r\n                    <Option value=\"Cr01\">Powdery</Option>\r\n                    <Option value=\"D01\">Fruity</Option>\r\n                    <Option value=\"Fa01\">Aromatic</Option>\r\n                    <Option value=\"H01\">Spicy</Option>\r\n                    <Option value=\"Ro01\">Woody</Option>\r\n                  </Select></Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row justify=\"center\">\r\n              <Col span={20}>\r\n                <Form.Item\r\n                  name=\"price\"\r\n                  label=\"Price\"\r\n                  rules={[\r\n                    {\r\n                      required: false,\r\n                      message: \"Please input your  Price!\",\r\n                    },\r\n                  ]} >\r\n\r\n                  <Input\r\n                    placeholder=\"input Price\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row justify=\"center\">\r\n              <Col span={20}>\r\n                <Form.Item\r\n                  name=\"countInStock\"\r\n                  label=\"Stock\"\r\n                  rules={[\r\n                    {\r\n                      required: false,\r\n                      message: \"Please input your  Stock!\",\r\n                    },\r\n                  ]} >\r\n\r\n                  <Input\r\n                    placeholder=\"input Stock\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n\r\n            <Row justify=\"center\">\r\n              <Col span={20}>\r\n                <Form.Item\r\n                  name=\"description\"\r\n                  label=\"Description\"\r\n                  rules={[\r\n                    {\r\n                      required: false,\r\n                      message: \"Please input your  Description!\",\r\n                    },\r\n                  ]} >\r\n\r\n                  <Input\r\n                    placeholder=\"input Description\"\r\n                    style={{ height: \"10rem\" }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row justify=\"center\">\r\n              <Col span={12} style={{ marginLeft: \"8rem\" }}>\r\n                <Form.Item\r\n                  name=\"main_image\"\r\n\r\n                  rules={[\r\n                    {\r\n                      required: false,\r\n                      message: \"Please input your image\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Upload\r\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                    listType=\"picture\"\r\n                    defaultFileList={[...mainList]}\r\n                  >\r\n                    <Button icon={<UploadOutlined />}>Upload</Button>\r\n                  </Upload>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n\r\n\r\n            <Row justify='center'>\r\n              <Button type=\"primary\" htmlType=\"submit\" style={{ marginBottom: \"2rem\" }}>\r\n                Add\r\n              </Button>\r\n            </Row>\r\n\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </InsideMainSection>\r\n  );\r\n}\r\n\r\nexport default AddBook;\r\n","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\BookFor\\EditBook.js",["139","140","141","142"],"import { Col, Row, Form, Input, Button, Upload, Select, notification } from 'antd';\r\nimport React from 'react';\r\nimport { InsideMainSection } from '../../components/Layout/Layout';\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport axios from '../../config/axios';\r\nconst { Option } = Select;\r\n\r\nfunction EditBook(props) {\r\n  const [books, setBooks] = React.useState({});\r\n  const [form] = Form.useForm();\r\n  const mainList = [\r\n    // {\r\n    //   uid: \"-1\",\r\n    //   name: \"main_image\",\r\n    //   status: \"done\",\r\n    //   url:\r\n    //     setBooks.main_image,\r\n\r\n    // },\r\n\r\n  ];\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(values);\r\n    const formData = new FormData();\r\n    // console.log(values.main_image.file.originFileObj);\r\n    if (values.main_image.file) formData.append('main_image', values.main_image.file.originFileObj);\r\n    formData.append('name', values.name);\r\n    formData.append('author', values.author);\r\n    formData.append('price', values.price);\r\n    formData.append('description', values.description);\r\n    formData.append('nameType', values.nameType);\r\n    formData.append('codeType', values.codeType);\r\n    formData.append('countInStock', values.countInStock);\r\n\r\n    const res = await axios.patch(`/books/${props.match.params.id}`, formData,);\r\n\r\n    try {\r\n\r\n      notification.success({\r\n        description: \"successfully\",\r\n\r\n      });\r\n      props.history.push(\"/admin/book\");\r\n    } catch (error) {\r\n      notification.error({\r\n        description: \"wrong.\",\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  function onChange(value) {\r\n    console.log(`selected ${value}`);\r\n  }\r\n\r\n  function onBlur() {\r\n    console.log(\"blur\");\r\n  }\r\n\r\n  function onFocus() {\r\n    console.log(\"focus\");\r\n  }\r\n  function onSearch(val) {\r\n    console.log(\"search:\", val);\r\n  }\r\n\r\n  const fetchAllBooks = async () => {\r\n    const { data } = await axios.get(`/books/${props.match.params.id}`);\r\n    setBooks(data);\r\n    console.log(data);\r\n    form.setFieldsValue({\r\n      name: data.name,\r\n      price: data.price,\r\n      description: data.description,\r\n      main_image: data.main_image,\r\n      statusBook: data.statusBook,\r\n      author: data.author,\r\n      description: data.description,\r\n      nameType: data.nameType,\r\n      codeType: data.codeType,\r\n      countInStock: data.countInStock\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchAllBooks();\r\n  }, []);\r\n\r\n  return (\r\n    <InsideMainSection>\r\n      <h2\r\n        style={{\r\n          background: \"linear-gradient(to right, #002416, #89e380)\",\r\n          width: \"100%\",\r\n          height: \"3.5rem\",\r\n          margin: \"0 auto\",\r\n          textAlign: \"center\",\r\n          paddingTop: \"0.5rem\",\r\n          paddingLeft: \"0rem\",\r\n          paddingRight: \"0rem\",\r\n          borderTopLeftRadius: \"1rem\",\r\n          borderTopRightRadius: \"1rem\",\r\n          color: \"white\",\r\n          fontFamily: \"Playfair\",\r\n          marginBottom: \"2rem\"\r\n        }}\r\n      >\r\n        Edit Book\r\n        </h2>\r\n      <Row justify=\"center\">\r\n        <Col span={21}>\r\n          <Form\r\n            layout=\"horizontal\"\r\n            labelCol={{ span: 4 }}\r\n            wrapperCol={{ span: 18 }}\r\n            onFinish={onFinish}\r\n            form={form}\r\n          >\r\n            <Row justify=\"center\">\r\n              <Col span={20}>\r\n                <Form.Item\r\n                  name=\"name\"\r\n                  label=\"Book Name\"\r\n                  rules={[\r\n                    {\r\n                      required: false,\r\n                      message: \"Please input your Book Name!\",\r\n                    },\r\n                  ]} >\r\n\r\n                  <Input\r\n                    placeholder=\"input Book Name\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row justify=\"center\">\r\n              <Col span={20}>\r\n                <Form.Item\r\n                  name=\"author\"\r\n                  label=\"Author\"\r\n                  rules={[\r\n                    {\r\n                      required: false,\r\n                      message: \"Please input your Author!\",\r\n                    },\r\n                  ]} >\r\n\r\n                  <Input\r\n                    placeholder=\"input Author\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row justify=\"center\">\r\n              <Col span={20}>\r\n                <Form.Item\r\n                  name=\"nameType\"\r\n                  label=\"Category_Name\"\r\n\r\n                  rules={[\r\n                    {\r\n                      required: false,\r\n                      message: \"Please input your category\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    name=\"nameType\"\r\n                    showSearch\r\n                    style={{ width: 200 }}\r\n                    placeholder=\"Select a note\"\r\n                    optionFilterProp=\"children\"\r\n                    onChange={onChange}\r\n                    onFocus={onFocus}\r\n                    onBlur={onBlur}\r\n                    onSearch={onSearch}\r\n                    filterOption={(input, option) =>\r\n                      option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                      0\r\n                    }\r\n                  >\r\n                    <Option value=\"anthology\">Floral</Option>\r\n                    <Option value=\"children's\">Citrus</Option>\r\n                    <Option value=\"crime\">Powdery</Option>\r\n                    <Option value=\"drama\">Fruity</Option>\r\n                    <Option value=\"fairytale\">Aromatic</Option>\r\n                    <Option value=\"horror\">Spicy</Option>\r\n                    <Option value=\"romance\">Woody</Option>\r\n                  </Select></Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row justify=\"center\">\r\n              <Col span={20}>\r\n                <Form.Item\r\n                  name=\"codeType\"\r\n                  label=\"Category_Code\"\r\n\r\n                  rules={[\r\n                    {\r\n                      required: false,\r\n                      message: \"Please input your category\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    name=\"codeType\"\r\n                    showSearch\r\n                    style={{ width: 200 }}\r\n                    placeholder=\"Select a note\"\r\n                    optionFilterProp=\"children\"\r\n                    onChange={onChange}\r\n                    onFocus={onFocus}\r\n                    onBlur={onBlur}\r\n                    onSearch={onSearch}\r\n                    filterOption={(input, option) =>\r\n                      option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                      0\r\n                    }\r\n                  >\r\n                    <Option value=\"A01\">Floral</Option>\r\n                    <Option value=\"Ch01's\">Citrus</Option>\r\n                    <Option value=\"Cr01\">Powdery</Option>\r\n                    <Option value=\"D01\">Fruity</Option>\r\n                    <Option value=\"Fa01\">Aromatic</Option>\r\n                    <Option value=\"H01\">Spicy</Option>\r\n                    <Option value=\"Ro01\">Woody</Option>\r\n                  </Select></Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row justify=\"center\">\r\n              <Col span={20}>\r\n                <Form.Item\r\n                  name=\"price\"\r\n                  label=\"Price\"\r\n                  rules={[\r\n                    {\r\n                      required: false,\r\n                      message: \"Please input your  Price!\",\r\n                    },\r\n                  ]} >\r\n\r\n                  <Input\r\n                    placeholder=\"input Price\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row justify=\"center\">\r\n              <Col span={20}>\r\n                <Form.Item\r\n                  name=\"countInStock\"\r\n                  label=\"Stock\"\r\n                  rules={[\r\n                    {\r\n                      required: false,\r\n                      message: \"Please input your  Stock!\",\r\n                    },\r\n                  ]} >\r\n\r\n                  <Input\r\n                    placeholder=\"input Stock\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row justify=\"center\">\r\n              <Col span={20}>\r\n                <Form.Item\r\n                  name=\"description\"\r\n                  label=\"Description\"\r\n                  rules={[\r\n                    {\r\n                      required: false,\r\n                      message: \"Please input your  Description!\",\r\n                    },\r\n                  ]} >\r\n\r\n                  <Input\r\n                    placeholder=\"input Description\"\r\n                    style={{ height: \"10rem\" }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n\r\n            <Row justify=\"center\">\r\n              <Col span={12} style={{ marginLeft: \"8rem\" }}>\r\n                <Form.Item\r\n                  name=\"main_image\"\r\n\r\n                  rules={[\r\n                    {\r\n                      required: false,\r\n                      message: \"Please input your image\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Upload\r\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                    listType=\"picture\"\r\n                    defaultFileList={[...mainList]}\r\n                  >\r\n                    <Button icon={<UploadOutlined />}>Upload</Button>\r\n                  </Upload>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row justify='center'>\r\n              <Button type=\"primary\" htmlType=\"submit\" style={{ marginBottom: \"2rem\" }}>\r\n                Edit\r\n              </Button>\r\n            </Row>\r\n\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </InsideMainSection>\r\n  );\r\n}\r\n\r\nexport default EditBook;\r\n","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\AllBook\\AllBook.js",["143","144"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  Collapse,\r\n  Input,\r\n  Divider,\r\n  Tag,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Form,\r\n  Pagination,\r\n  Typography,\r\n} from \"antd\";\r\nimport axios from \"../../config/axios\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Panel } = Collapse;\r\nconst { Search } = Input;\r\n\r\nconst ProductContentContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #fff;\r\n  margin: 0 auto;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst FilterOptionContainer = styled.div`\r\n  width: 20%;\r\n  /* background: #f3e3d1; */\r\n  float: left;\r\n  border-right: 5px solid #fff5ea;\r\n`;\r\n\r\nconst FindProductContainer = styled.div`\r\n  padding: 3rem;\r\n  /* margin-top: 2rem; */\r\n  width: 90%;\r\n  /* background: #f1e3d2; */\r\n`;\r\n\r\nconst ProductContainer = styled.div`\r\n  width: 95%;\r\n  margin-top: 2rem;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst SearchAndProductContainer = styled.div`\r\n  width: 80%;\r\n  height: 100%;\r\n  background: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 10rem;\r\n  height: 10rem;\r\n  background: cover center;\r\n`;\r\n\r\n\r\nconst ProductRow = styled.div`\r\n  width: 10rem;\r\n  height: 13rem;\r\n  border-bottom: 1px solid #000;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default function AllBook() {\r\n  const [form] = Form.useForm();\r\n  const [selectTag, setSelectTag] = React.useState([]);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [products, setProducts] = React.useState([]);\r\n  const [actualPresentedProduct, setActualPresentedProduct] = React.useState(\r\n    products\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const [searchQuery, setSearchQuery] = React.useState({\r\n\r\n    book: [],\r\n    type: [],\r\n    code: [],\r\n    author: [],\r\n    price: [],\r\n  });\r\n\r\n  const bookOptions = [\r\n    { label: \"pompompom\", value: \"pompompom\" },\r\n\r\n  ];\r\n\r\n  const [books, setBooks] = React.useState(bookOptions);\r\n\r\n  const onSearch = async (value) => {\r\n    setIsLoading(true);\r\n    const { data } = await axios.get(`/books/?_search=${value}`);\r\n    const searchProduct = data;\r\n    setProducts(searchProduct);\r\n    setIsLoading(false);\r\n  };\r\n  const onSearchBook = (e) => {\r\n    const valueAsRegex = new RegExp(e.target.value, \"gi\");\r\n    const searchBook = bookOptions.filter((book) =>\r\n      valueAsRegex.test(book.label)\r\n    );\r\n    setBooks(searchBook);\r\n  };\r\n\r\n  const onSearchTypeName = (e) => {\r\n    const valueAsRegex = new RegExp(e.target.value, \"gi\");\r\n    const searchType = typeOptions.filter((type) =>\r\n      valueAsRegex.test(type.label)\r\n    );\r\n    setBooks(searchType);\r\n  };\r\n\r\n  const onSearchCode = (e) => {\r\n    const valueAsRegex = new RegExp(e.target.value, \"gi\");\r\n    const searchType = codeOptions.filter((code) =>\r\n      valueAsRegex.test(code.label)\r\n    );\r\n    setBooks(searchType);\r\n  };\r\n\r\n  const onSearchAuthor = (e) => {\r\n    const valueAsRegex = new RegExp(e.target.value, \"gi\");\r\n    const searchType = authorOptions.filter((author) =>\r\n      valueAsRegex.test(author.label)\r\n    );\r\n    setBooks(searchType);\r\n  };\r\n\r\n  const tagsData = [\r\n\r\n  ];\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked\r\n      ? [...selectTag, tag]\r\n      : selectTag.filter((t) => t !== tag);\r\n    setSelectTag(nextSelectedTags);\r\n    setSearchQuery({ ...searchQuery, type: [...nextSelectedTags] });\r\n  };\r\n\r\n  const fetchAllProducts = async () => {\r\n    const { data } = await axios.get(\"/books/\");\r\n    setProducts(data);\r\n    setActualPresentedProduct(data);\r\n  };\r\n\r\n\r\n\r\n  const authorOptions = [\r\n    { label: \"pompom\", value: \"pompom\" },\r\n    { label: \"poppop\", value: \"poppop\" },\r\n    { label: \"aaaa\", value: \"aaaa\" },\r\n  ];\r\n  const typeOptions = [\r\n    { label: \"anthology\", value: \"anthology\" },\r\n    { label: \"children's\", value: \"children's\" },\r\n    { label: \"crime\", value: \"crime\" },\r\n    { label: \"drama\", value: \"drama\" },\r\n    { label: \"fairytale\", value: \"fairytale\" },\r\n    { label: \"horror\", value: \"horror\" },\r\n    { label: \"romance\", value: \"romance\" },\r\n  ];\r\n  const codeOptions = [\r\n    { label: \"a1\", value: \"a1\" },\r\n    { label: \"b2\", value: \"b2\" },\r\n    { label: \"c3\", value: \"c3\" },\r\n    { label: \"d4\", value: \"d4\" },\r\n    { label: \"e5\", value: \"e5\" },\r\n    { label: \"f6\", value: \"f6\" },\r\n    { label: \"g7\", value: \"g7\" },\r\n    { label: \"t8\", value: \"t8\" },\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    fetchAllProducts();\r\n  }, []);\r\n  React.useEffect(() => {\r\n    setActualPresentedProduct(products);\r\n  }, [products]);\r\n\r\n  const handleNextPage = (id) => {\r\n    history.push(`/book/${id}`);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const filteredProducts = products.filter(\r\n      (item) =>\r\n\r\n        (searchQuery.book.length\r\n          ? searchQuery.book.includes(item.name)\r\n          : true) &&\r\n\r\n        (searchQuery.type.length\r\n          ? searchQuery.type.includes(item.type_name)\r\n          : true) &&\r\n        (searchQuery.author.length\r\n          ? searchQuery.author.includes(item.author)\r\n          : true) &&\r\n        (searchQuery.code.length\r\n          ? searchQuery.code.includes(item.type_code)\r\n          : true)\r\n    );\r\n    setActualPresentedProduct(filteredProducts);\r\n  }, [searchQuery]);\r\n\r\n  const debounce = (func, wait) => {\r\n    let timeout;\r\n\r\n    return function executedFunction(...args) {\r\n      const later = () => {\r\n        clearTimeout(timeout);\r\n        func(...args);\r\n      };\r\n\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(later, wait);\r\n    };\r\n  };\r\n\r\n  const onChangeForm = (values, allvalues) => {\r\n    console.log(values);\r\n    setSearchQuery({ ...searchQuery, ...values });\r\n  };\r\n\r\n  return (\r\n    <ProductContentContainer>\r\n      <FilterOptionContainer>\r\n        <Form\r\n          form={form}\r\n          name=\"control-hooks\"\r\n          onValuesChange={debounce(onChangeForm, 500)}\r\n        >\r\n          <Collapse defaultActiveKey={[\"12\"]}>\r\n\r\n            <Panel header=\"BOOK\" key=\"22\">\r\n              <Input\r\n                placeholder=\"input search text\"\r\n                allowClear\r\n                enterButton=\"Search\"\r\n                size=\"small\"\r\n                onChange={onSearchBook}\r\n              />\r\n\r\n            </Panel>\r\n\r\n            <Divider />\r\n\r\n\r\n            <Panel header=\"TYPE NAME\" key=\"32\">\r\n              <Input\r\n                placeholder=\"input search text\"\r\n                allowClear\r\n                enterButton=\"Search\"\r\n                size=\"small\"\r\n                onChange={onSearchTypeName}\r\n              />\r\n              <Form.Item name=\"type\">\r\n                <Checkbox.Group options={typeOptions} />\r\n              </Form.Item>\r\n            </Panel>\r\n\r\n\r\n            <Divider />\r\n\r\n            <Panel header=\"CODE\" key=\"42\">\r\n              <Input\r\n                placeholder=\"input search text\"\r\n                allowClear\r\n                enterButton=\"Search\"\r\n                size=\"small\"\r\n                onChange={onSearchCode}\r\n              />\r\n              <Form.Item name=\"code\">\r\n                <Checkbox.Group options={codeOptions} />\r\n              </Form.Item>\r\n            </Panel>\r\n            <Divider />\r\n            <Panel header=\"AUTHOR\" key=\"52\">\r\n              <Input\r\n                placeholder=\"input search text\"\r\n                allowClear\r\n                enterButton=\"Search\"\r\n                size=\"small\"\r\n                onChange={onSearchAuthor}\r\n              />\r\n\r\n            </Panel>\r\n\r\n          </Collapse>\r\n        </Form>\r\n      </FilterOptionContainer>\r\n      <SearchAndProductContainer>\r\n        <FindProductContainer>\r\n          <h1>Find Books</h1>\r\n          <Search\r\n            placeholder=\"input search text\"\r\n            allowClear\r\n            // enterButton=\"Search\"\r\n            size=\"large\"\r\n            onSearch={onSearch}\r\n            loading={isLoading}\r\n            style={{ width: 600, margin: '0 10px' }}\r\n          />\r\n          {tagsData.map((tag) => (\r\n            <CheckableTag\r\n              key={tag}\r\n              checked={selectTag.indexOf(tag) > -1}\r\n              onChange={(checked) => handleChange(tag, checked)}\r\n            >\r\n              {tag}\r\n            </CheckableTag>\r\n          ))}\r\n        </FindProductContainer>\r\n\r\n        <ProductContainer>\r\n          <Row align=\"middle\" justify=\"center\">\r\n            {actualPresentedProduct &&\r\n              actualPresentedProduct.map(({ name, main_image, id, author }) => (\r\n                <Col span={6} key={id}>\r\n                  <ProductRow onClick={() => handleNextPage(id)}>\r\n                    <Image src={main_image} alt=\"\" />\r\n                    <Row justify=\"center\">\r\n                      <Typography.Text>Book :{name}</Typography.Text>\r\n                    </Row>\r\n                    <Row justify=\"center\">\r\n                      <Typography.Text>Author :{author}</Typography.Text>\r\n                    </Row>\r\n\r\n                  </ProductRow>\r\n                </Col>\r\n              ))}\r\n          </Row>\r\n        </ProductContainer>\r\n        <Pagination current={1} total={20} />\r\n      </SearchAndProductContainer>\r\n    </ProductContentContainer>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\SingleBook\\SingleBook.js",["145"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  PageHeader,\r\n  InputNumber,\r\n} from \"antd\";\r\nimport { ShoppingCartOutlined, } from \"@ant-design/icons\";\r\nimport \"../../App.less\";\r\n\r\n\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"../../config/axios\";\r\n\r\n\r\nfunction SingleBook(props) {\r\n  const { id } = useParams();\r\n  const [bookImg, setBookImg] = useState(\"\");\r\n  const [data, setData] = useState({});\r\n  const [qty, setQty] = useState(1);\r\n\r\n  useEffect(() => {\r\n    fetchBook();\r\n  }, []);\r\n\r\n  const fetchBook = async () => {\r\n    axios.get(`/books/${id}`)\r\n      .then((res) => {\r\n        setData(res.data);\r\n        setBookImg(res.data.main_image);\r\n        console.log({ data });\r\n      });\r\n\r\n  };\r\n\r\n  const putAddCart = async () => {\r\n    axios.post(`/carts/${id}`, { qty });\r\n    props.history.push(\"/cart\");\r\n  };\r\n\r\n  const putBack = () => {\r\n    props.history.push(\"/book\");\r\n  };\r\n\r\n\r\n  function onChange(value) {\r\n    console.log(\"changed\", value);\r\n    setQty(value);\r\n  }\r\n\r\n  const ButAddCard = styled.button`\r\n  box-shadow: 1px 3px 16px 3px rgba(51, 48, 42, 0.2);\r\n  border-radius: 1rem;\r\n  background: #fff;\r\n `;\r\n\r\n\r\n\r\n\r\n\r\n  const InsideMainSection = styled.div`\r\n    max-width: 80vw;\r\n    background: #fff;\r\n    box-shadow: 1px 3px 16px 3px rgba(51, 48, 42, 0.2);\r\n    margin: 1rem auto 0 auto;\r\n    border-radius: 0.4rem;\r\n    height: 100%;\r\n    background-color:#d7e9d3;\r\n  `;\r\n\r\n  const routes = [\r\n    {\r\n      path: \"/book\",\r\n      breadcrumbName: \"Home\",\r\n    },\r\n\r\n    {\r\n      path: \"/book/:id\",\r\n      breadcrumbName: (data.name),\r\n    },\r\n  ];\r\n\r\n\r\n  function numberWithCommas(x = 0) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n\r\n  return (\r\n    <InsideMainSection style={{ padding: \"20px 20px 20px 20px\" }}>\r\n      <PageHeader\r\n        style={{\r\n          display: \"inline-flex\",\r\n          fontStyle: \"normal\",\r\n          fontWeight: \"300\",\r\n          letterSpacing: \"0.045em\",\r\n          color: \"#1f9906 !important\",\r\n          margin: \"0\",\r\n          marginBottom: \"10px\",\r\n          padding: \"0\",\r\n        }}\r\n        breadcrumb={{ routes }}\r\n      />\r\n      <Row>\r\n        <Col\r\n          span={24}\r\n          style={{\r\n            margin: \"0 auto\",\r\n            border: \"1px solid #1f9906\",\r\n            boxSizing: \"border-box\",\r\n            paddingTop: \"2em\",\r\n            paddingBottom: \"2em\",\r\n            backgroundColor: \"#fff\"\r\n\r\n          }}\r\n        >\r\n          <Row justify=\"center\">\r\n\r\n            <Col span={9} style={{ backgroundColor: \"#fff\", }}>\r\n              <div\r\n                style={{\r\n                  backgroundImage: \"url(\" + bookImg + \")\",\r\n                  width: \"auto\",\r\n                  height: \"34em\",\r\n                  margin: \"0 auto\",\r\n                  backgroundSize: \"contain\",\r\n                  backgroundPosition: \"center\",\r\n                  backgroundRepeat: \"no-repeat\",\r\n\r\n                }}\r\n              ></div>\r\n            </Col>\r\n            <Col span={2}></Col>\r\n            <Col span={10} style={{ paddingRight: \"2em\" }}>\r\n              <div\r\n                style={{\r\n                  marginTop: \"2rem\",\r\n                  backgroundColor: \"#fff\",\r\n                  borderRadius: \"2rem\",\r\n                  width: \"100%\",\r\n                  padding: \"2em\",\r\n                  boxShadow: \"1px 3px 16px 3px rgba(51, 48, 42, 0.3)\"\r\n                }}\r\n              >\r\n                <Row>\r\n\r\n\r\n                  <Col span={24}>\r\n                    <h1>\r\n                      Book : {data.name}\r\n                    </h1>\r\n                  </Col>\r\n                  <Col span={12}>\r\n                    <h2>Author : {data.author}</h2>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row >\r\n                  <Col span={12}>\r\n                    <h2 >\r\n                      Rent : {numberWithCommas(data.price)} THB\r\n                    </h2>\r\n                  </Col>\r\n\r\n                </Row>\r\n                <div\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"1px\",\r\n                    backgroundColor: \"#C0B7AD\",\r\n                    marginTop: \"1em\",\r\n                  }}\r\n                ></div>\r\n\r\n                <Row style={{ marginTop: \"1.4em\" }}>\r\n                  <Col\r\n                    span={7}\r\n                    style={{\r\n                      textAlign: \"end\",\r\n                      padding: \"4px 20px 0 0\",\r\n                    }}\r\n                  >\r\n                    <h4 > Quantity :</h4>\r\n                  </Col>\r\n                  <Col span={6}>\r\n                    <InputNumber\r\n                      min={1}\r\n                      max={data.countInStock}\r\n\r\n                      defaultValue={1}\r\n                      onChange={onChange}\r\n                    />\r\n                  </Col>\r\n                  <Col\r\n                    span={7}\r\n                    style={{\r\n                      textAlign: \"start\",\r\n                      paddingTop: \"4px\",\r\n                    }}\r\n                  >\r\n                    <h4\r\n\r\n                      style={{\r\n                        color: \"#AAA393\",\r\n                        fontWeight: \"300\"\r\n                        ,\r\n                      }}\r\n                    >\r\n                      {data.countInStock}\r\n                    </h4>\r\n                  </Col>\r\n                </Row>\r\n                <Row style={{ marginTop: \"1.6em\" }}>\r\n                  <Col span={12} align=\"center\">\r\n                    <ButAddCard\r\n                      onClick={() => putAddCart()}>\r\n                      <ShoppingCartOutlined />\r\n                      <p>ADD TO CART</p>\r\n                    </ButAddCard>\r\n\r\n\r\n                  </Col>\r\n\r\n                </Row>\r\n\r\n              </div>\r\n              <Row justify=\"end\" style={{ marginTop: \"2rem\" }}>\r\n                <Col align=\"center\">\r\n                  <ButAddCard style={{ height: \"3rem\" }}\r\n                    onClick={putBack}>\r\n                    BACK\r\n                  </ButAddCard>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n\r\n          </Row>\r\n\r\n        </Col>\r\n      </Row>\r\n\r\n\r\n\r\n    </InsideMainSection >\r\n  );\r\n}\r\n\r\nexport default SingleBook;\r\n","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\Cart\\Cart.js",["146"],"import { Button, Col, Row } from 'antd';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport styled from \"styled-components\";\r\nimport CardCart from \"../../components/CardCart/CardCart\";\r\nimport Omise from '../../components/Omise/Omise';\r\nimport axios from '../../config/axios';\r\nimport { BookContext } from '../../Context/bookContext';\r\n// import { OrderContext } from '../../Context/orderContext';\r\n\r\n\r\n\r\n\r\nconst InsideMainSection = styled.div`\r\n  box-shadow: 1px 0 45px 0.41px #33302a;\r\n  max-width: 70vw;\r\n  background: #fff;\r\n  box-shadow: 1px 4px 19px 3px rgba(51, 48, 42, 0.47);\r\n  margin: 0 auto;\r\n  border-radius: 1rem;\r\n  height: 100%;\r\n`;\r\n\r\n\r\n\r\nexport default function AllCart(props) {\r\n  let totalPrice = 0;\r\n  // const { totalPriceOrder, setTotalPriceOrder } = useContext(OrderContext);\r\n\r\n  const { selectItem, retrieveAllItems } = useContext(BookContext);\r\n\r\n  // const putPay = async (totalPrice, id) => {\r\n  //   await axios.post(`/checkout/${id}`, { totalPrice });\r\n  //   props.history.push(\"/checkout\");\r\n  // };\r\n\r\n  const putBorrow = async () => {\r\n    await axios.post(`/borrow`);\r\n    props.history.push(`/user/borrow`);\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveAllItems();\r\n\r\n\r\n    console.log(totalPrice);\r\n  }, []);\r\n\r\n  console.log(selectItem);\r\n\r\n  return (\r\n    <InsideMainSection>\r\n      <Row justify=\"center\">\r\n        <h2\r\n          style={{\r\n            background: \"linear-gradient(to right, #002416, #89e380)\",\r\n            width: \"100%\",\r\n            height: \"3.5rem\",\r\n            margin: \"0 auto\",\r\n            textAlign: \"center\",\r\n            paddingTop: \"0.5rem\",\r\n            paddingLeft: \"0rem\",\r\n            paddingRight: \"0rem\",\r\n            borderTopLeftRadius: \"1rem\",\r\n            borderTopRightRadius: \"1rem\",\r\n            color: \"white\",\r\n            fontFamily: \"Playfair\",\r\n            marginBottom: \"2rem\"\r\n          }}\r\n        >\r\n          Cart\r\n        </h2>\r\n      </Row>\r\n      <br></br>\r\n      <Row justify=\"center\"><Col> <h2>My Item</h2></Col></Row>\r\n      <br></br>\r\n      <Row justify=\"center\">\r\n        {selectItem.length &&\r\n          selectItem.map(item => {\r\n            const { Book } = item;\r\n            totalPrice += +item.qty * +item.Book.price;\r\n\r\n            // setTotalPriceOrder(totalPrice);\r\n            return <CardCart\r\n              key={item.id}\r\n              props={{ ...Book }}\r\n              qty={item.qty} />;\r\n          })}\r\n      </Row>\r\n      <hr></hr>\r\n      <Row justify=\"end\">\r\n        <Col span={5}>\r\n          Total : {+totalPrice}\r\n        </Col>\r\n      </Row>\r\n      <br></br>\r\n      {/* <Row justify=\"end\">\r\n        <Col span={5}>\r\n          <Button type=\"primary\" onClick={() => putPay(totalPrice)} >Pay</Button>\r\n        </Col>\r\n      </Row> */}\r\n      <Row justify=\"end\">\r\n        <Col span={5}>\r\n          <Omise totalPrice={totalPrice} onClick={() => putBorrow()} />\r\n          {/* <button onClick={() => putBorrow()} >go to borrow</button> */}\r\n        </Col>\r\n      </Row>\r\n      <br></br>\r\n      <Row justify=\"center\">\r\n        <Col span={1}>\r\n          <Button type=\"primary\" onClick={() => props.history.push(\"/book\")}>Back</Button>\r\n        </Col>\r\n      </Row>\r\n\r\n\r\n\r\n    </InsideMainSection>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\Context\\bookContext.js",["147"],"import React, { createContext, useEffect, useReducer } from 'react';\r\nimport axios from \"../config/axios\";\r\nimport { BookReducer } from \"../Reducer/BookReducer\";\r\nimport LocalStorageService from '../services/LocalStorageService';\r\n\r\n\r\nexport const BookContext = createContext();\r\n\r\nexport function BookContextProvider({ children }) {\r\n  const [selectItem, dispatch] = useReducer(BookReducer, []);\r\n\r\n  const retrieveAllItems = async () => {\r\n    let data = {};\r\n    if (LocalStorageService.getToken()) {\r\n      ({ data } = await axios.get('/carts'));\r\n    }\r\n    dispatch({ type: 'RETRIEVE', data: data });\r\n  };\r\n\r\n  const addItem = async (id, attr) => {\r\n    dispatch({ type: 'ADD', ...attr });\r\n    await axios.post(`/carts/${id}`, {\r\n      qty: attr.qty || 1,\r\n    });\r\n  };\r\n\r\n  const sendUpdatedData = async bookId => {\r\n    await axios.post(`/carts/${bookId}`, {\r\n      qty: selectItem.find(item => item.book_id === bookId)\r\n    });\r\n  };\r\n\r\n  const updateQty = async (bookId, qty) => {\r\n    const { data: { qty: newQty } } = await axios.post(`/carts/${bookId}`, { qty });\r\n    newQty === 0\r\n      ? deleteBook(bookId)\r\n      : await dispatch({ type: 'UPDATE_QTY', bookId, qty: newQty });\r\n  };\r\n\r\n\r\n  const deleteBook = async bookId => {\r\n    await axios.delete(`/carts//${bookId}`);\r\n    dispatch({ type: 'DELETE', bookId });\r\n  };\r\n  // useEffect(() => {\r\n  //   retrieveAllItems();\r\n  // }, []);\r\n  return (\r\n    <BookContext.Provider value={{\r\n      retrieveAllItems,\r\n      addItem,\r\n      dispatch,\r\n      updateQty,\r\n      deleteBook,\r\n      sendUpdatedData,\r\n      selectItem\r\n    }}>\r\n      {children}\r\n    </BookContext.Provider>\r\n  );\r\n}","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\Reducer\\BookReducer.js",[],"C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\components\\CardCart\\CardCart.js",["148","149"],"import React, { useContext } from 'react';\r\nimport { Row, Col, Button, Divider } from 'antd';\r\nimport { BookContext } from '../../Context/bookContext';\r\n\r\n\r\nexport default function Cart({ props, qty }) {\r\n  const { selectItem, updateQty, deleteBook, sendUpdatedData } = useContext(\r\n    BookContext\r\n  );\r\n  const { main_image, name, price, id } = props;\r\n\r\n  return (\r\n    <Row justify=\"center\">\r\n\r\n\r\n      <Row>\r\n        <Col >\r\n          <img src={main_image} alt={name} style={{ width: \"10rem\", height: \"10rem\" }} />\r\n        </Col>\r\n        <Col style={{ marginLeft: \"2rem\", marginRight: \"2rem\" }}>\r\n          <div>\r\n            Book : {name}\r\n          </div>\r\n          <div>\r\n            Price: {price}\r\n          </div>\r\n\r\n        </Col>\r\n        <Col style={{ marginLeft: \"2rem\", marginRight: \"0.5rem\" }}>\r\n          <Button type=\"primary\" onClick={() =>\r\n            updateQty(id, -1)\r\n          } >-</Button>\r\n        </Col>\r\n        <div>\r\n          Quantity: {qty}\r\n\r\n        </div>\r\n\r\n\r\n        <Col style={{ marginRight: \"2rem\", marginLeft: \"0.5rem\" }}>\r\n          <Button type=\"primary\" onClick={() => {\r\n            updateQty(id, 1);\r\n          }}>+</Button>\r\n        </Col>\r\n\r\n        <Col>\r\n          <Button type=\"primary\" onClick={() => {\r\n            deleteBook(id);\r\n          }}>Delete</Button>\r\n        </Col>\r\n        <Divider></Divider>\r\n      </Row>\r\n\r\n\r\n\r\n    </Row >\r\n  );\r\n}\r\n\r\n","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\components\\MiniCart\\MiniCart.js",["150"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport CtaButton from './CtaButton';\r\nimport SelectedItem from './SelectedItem';\r\nimport { BookContext } from '../../Context/bookContext';\r\nimport { RiShoppingCartLine } from 'react-icons/ri';\r\nimport styled from \"styled-components\";\r\nimport { Divider, Row } from \"antd\";\r\n\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  cursor: pointer;\r\n  width: 10rem;\r\n  height: 240px;\r\n  bottom: -15.4rem;\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  left: 0rem;\r\n  overflow-y: scroll;\r\n  color: #000;\r\n  background-color: #b2e8a6;\r\n  box-shadow: 1px 4px 19px 3px rgba(51, 48, 42, 0.47);\r\n  border-radius: 1rem;\r\n\r\n`;\r\n\r\nfunction MiniCart(props) {\r\n  const { selectItem } = useContext(BookContext);\r\n  const [hide, toggleHide] = useState(true);\r\n\r\n  let totalPrice = 0;\r\n\r\n  return (\r\n    <div>\r\n      <RiShoppingCartLine onClick={() => toggleHide(!hide)} style={{ height: '2rem', width: \"3.5rem\" }} />\r\n      {hide ? null : (\r\n        <Container>\r\n          {selectItem ? (\r\n            selectItem.map(item => {\r\n              const { Book } = item;\r\n              totalPrice += +item.qty * +item.Book.price;\r\n              return (\r\n\r\n                <SelectedItem\r\n                  key={item.id}\r\n                  props={{ ...Book }}\r\n                  qty={item.qty}\r\n\r\n\r\n                />\r\n\r\n              );\r\n            })\r\n          ) : (\r\n              <Container>\r\n                <h1 style={{ fontSize: '1.5rem', color: '#000' }}>Empty</h1>\r\n              </Container>\r\n            )}\r\n          <Divider />\r\n          <Row justify=\"center\">Total Price {totalPrice}</Row>\r\n          <CtaButton at={'/Cart'}>Checkout</CtaButton>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MiniCart;\r\n","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\components\\MiniCart\\SelectedItem.js",["151"],"import { Row } from 'antd';\r\nimport React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Item = styled.div`\r\n  position: relative;\r\n  cursor: pointer;\r\n  margin: 0 1rem;\r\n`;\r\nconst Img = styled.img`\r\n  position: relative;\r\n  cursor: pointer;\r\n  width: 50px;\r\n`;\r\n\r\nfunction SelectedItem({ props, qty }) {\r\n  const { main_image, name, price, id } = props;\r\n  return (\r\n\r\n    <div>\r\n      <Row>\r\n        <Item>\r\n          <Img src={main_image} alt={name} />\r\n        </Item>\r\n        <Item >price :{price}</Item>\r\n        <Item >Quantity :{qty}</Item>\r\n      </Row>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default SelectedItem;\r\n","C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\components\\MiniCart\\CtaButton.js",[],"C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\components\\Omise\\Omise.js",[],"C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\Login\\AdminLogin.js",[],"C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\Register\\AdminRegister.js",[],"C:\\Users\\User\\Desktop\\learn\\vs code\\single-project\\frontend\\src\\pages\\UserBorrow\\UserBorrow.js",["152"],"import React, { useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  InputNumber,\r\n  Form,\r\n  Row,\r\n  Col,\r\n} from \"antd\";\r\nimport axios from \"../../config/axios\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n          children\r\n        )}\r\n    </td>\r\n  );\r\n};\r\n\r\nfunction UserBorrow(props) {\r\n  const [form] = Form.useForm();\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [Books, setBooks] = React.useState([]);\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  const onSearch = async (value) => {\r\n    setIsLoading(true);\r\n    const { data } = await axios.get(`/books/?_search=${value}`);\r\n    const searchBook = data;\r\n    setBooks(searchBook);\r\n    setBooks(searchBook);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const fetchAllBooks = async () => {\r\n    const { data } = await axios.get(\"/borrow\");\r\n    setBooks(data);\r\n    console.log(data);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchAllBooks();\r\n\r\n  }, []);\r\n\r\n\r\n  const deleteBook = async (id) => {\r\n    await axios.delete(`/borrow/${id}`);\r\n    setBooks(Books.filter((book) => book.id !== id));\r\n    ///@@@@@@\r\n    // fetchAllBooks();\r\n    setEditingKey(\"\");\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Book\",\r\n      dataIndex: \"name\",\r\n      width: \"15%\",\r\n      align: \"center\",\r\n\r\n\r\n    },\r\n    {\r\n      title: \"Img\",\r\n      dataIndex: \"main_image\",\r\n      render: (text, record) => <img src={record.main_image} style={{ width: \"3rem\", height: \"3rem\", }} />,\r\n      width: \"10%\",\r\n      align: \"center\",\r\n\r\n    },\r\n\r\n\r\n    {\r\n      title: \"author\",\r\n      dataIndex: \"author\",\r\n      width: \"10%\",\r\n\r\n      align: \"center\",\r\n    },\r\n\r\n\r\n    {\r\n      title: \"operation\",\r\n      dataIndex: \"operation\",\r\n      align: \"center\",\r\n      width: \"15%\",\r\n      render: (_, record) => {\r\n\r\n        return (\r\n          <Row justify=\"space-around\">\r\n            <Col>\r\n              <button style={{ width: \"4rem\" }}\r\n\r\n                onClick={() => deleteBook(record.id)}\r\n              >\r\n                Return\r\n          </button>\r\n            </Col>\r\n\r\n          </Row >\r\n\r\n        );\r\n\r\n      },\r\n    },\r\n  ];\r\n\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === \"price\" ? \"number\" : \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Row style={{ marginLeft: \"5rem\" }}>\r\n        <Col>\r\n          <Search\r\n            placeholder=\"input search text\"\r\n            allowClear\r\n            onSearch={onSearch}\r\n            loading={isLoading}\r\n            style={{ width: \"25rem\", margin: \"0 10px\" }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <br></br>\r\n      <Row justify=\"center\">\r\n        <Col span={21}>\r\n          <h2\r\n            style={{\r\n              background: \"linear-gradient(to right, #002416, #89e380)\",\r\n              width: \"100%\",\r\n              height: \"3.5rem\",\r\n              margin: \"0 auto\",\r\n              textAlign: \"center\",\r\n              paddingTop: \"0.5rem\",\r\n              paddingLeft: \"0rem\",\r\n              paddingRight: \"0rem\",\r\n              borderTopLeftRadius: \"1rem\",\r\n              borderTopRightRadius: \"1rem\",\r\n              color: \"white\",\r\n              fontFamily: \"Playfair\",\r\n\r\n            }}\r\n          >\r\n            Borrow\r\n        </h2></Col>\r\n      </Row>\r\n      <Row justify=\"center\">\r\n        <Col span={21}>\r\n          <Form form={form} component={false}>\r\n            <Table\r\n              style={{ border: \"2px solid #ddd\" }}\r\n              components={{\r\n                body: {\r\n                  cell: EditableCell,\r\n\r\n                },\r\n              }}\r\n\r\n              bordered\r\n              dataSource={Books}\r\n              columns={mergedColumns}\r\n              rowClassName=\"editable-row\"\r\n              rowKey={record => record.id}\r\n\r\n            />\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserBorrow;\r\n",{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"153","replacedBy":"157"},{"ruleId":"155","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":4,"column":8,"nodeType":"161","messageId":"162","endLine":4,"endColumn":14},{"ruleId":"163","severity":1,"message":"164","line":26,"column":1,"nodeType":"165","endLine":32,"endColumn":3},{"ruleId":"159","severity":1,"message":"166","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":28},{"ruleId":"167","severity":1,"message":"168","line":113,"column":33,"nodeType":"169","endLine":113,"endColumn":107},{"ruleId":"159","severity":1,"message":"170","line":9,"column":10,"nodeType":"161","messageId":"162","endLine":9,"endColumn":15},{"ruleId":"159","severity":1,"message":"171","line":9,"column":17,"nodeType":"161","messageId":"162","endLine":9,"endColumn":25},{"ruleId":"159","severity":1,"message":"170","line":9,"column":10,"nodeType":"161","messageId":"162","endLine":9,"endColumn":15},{"ruleId":"159","severity":1,"message":"172","line":36,"column":11,"nodeType":"161","messageId":"162","endLine":36,"endColumn":14},{"ruleId":"173","severity":1,"message":"174","line":80,"column":7,"nodeType":"175","messageId":"176","endLine":80,"endColumn":18},{"ruleId":"177","severity":1,"message":"178","line":89,"column":6,"nodeType":"179","endLine":89,"endColumn":8,"suggestions":"180"},{"ruleId":"159","severity":1,"message":"170","line":100,"column":10,"nodeType":"161","messageId":"162","endLine":100,"endColumn":15},{"ruleId":"177","severity":1,"message":"181","line":216,"column":6,"nodeType":"179","endLine":216,"endColumn":19,"suggestions":"182"},{"ruleId":"177","severity":1,"message":"183","line":26,"column":6,"nodeType":"179","endLine":26,"endColumn":8,"suggestions":"184"},{"ruleId":"177","severity":1,"message":"185","line":47,"column":6,"nodeType":"179","endLine":47,"endColumn":8,"suggestions":"186"},{"ruleId":"159","severity":1,"message":"187","line":1,"column":32,"nodeType":"161","messageId":"162","endLine":1,"endColumn":41},{"ruleId":"159","severity":1,"message":"188","line":7,"column":11,"nodeType":"161","messageId":"162","endLine":7,"endColumn":21},{"ruleId":"159","severity":1,"message":"189","line":7,"column":46,"nodeType":"161","messageId":"162","endLine":7,"endColumn":61},{"ruleId":"159","severity":1,"message":"187","line":1,"column":39,"nodeType":"161","messageId":"162","endLine":1,"endColumn":48},{"ruleId":"159","severity":1,"message":"190","line":18,"column":36,"nodeType":"161","messageId":"162","endLine":18,"endColumn":38},{"ruleId":"167","severity":1,"message":"168","line":99,"column":33,"nodeType":"169","endLine":99,"endColumn":107},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],["191"],["192"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'RiShoppingCartLine' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'books' is assigned a value but never used.","'setBooks' is assigned a value but never used.","'res' is assigned a value but never used.","no-dupe-keys","Duplicate key 'description'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'fetchAllBooks'. Either include it or remove the dependency array.","ArrayExpression",["193"],"React Hook React.useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.",["194"],"React Hook useEffect has a missing dependency: 'fetchBook'. Either include it or remove the dependency array.",["195"],"React Hook useEffect has missing dependencies: 'retrieveAllItems' and 'totalPrice'. Either include them or remove the dependency array.",["196"],"'useEffect' is defined but never used.","'selectItem' is assigned a value but never used.","'sendUpdatedData' is assigned a value but never used.","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [fetchAllBooks]",{"range":"205","text":"206"},"Update the dependencies array to be: [products, searchQuery]",{"range":"207","text":"208"},"Update the dependencies array to be: [fetchBook]",{"range":"209","text":"210"},"Update the dependencies array to be: [retrieveAllItems, totalPrice]",{"range":"211","text":"212"},[2392,2394],"[fetchAllBooks]",[5268,5281],"[products, searchQuery]",[584,586],"[fetchBook]",[1252,1254],"[retrieveAllItems, totalPrice]"]